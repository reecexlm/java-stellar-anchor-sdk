apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "common.name" . }}
  namespace: {{ .Release.Namespace }}
  {{- if .Values.deployment.annotations }}
  annotations:
    {{- range $key, $value := .Values.deployment.annotations }}
    {{ $key }}: {{ $value | quote }}
    {{- end }}
  {{- end }}
  labels:
    app.kubernetes.io/name: {{ include "common.name" . }}
    helm.sh/chart: {{ include "common.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Values.service.name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "common.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repo }}/{{ .Values.image.name }}:{{ .Values.image.tag }}"
          args: ["--sep-server"]
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          volumeMounts:
          - name: {{ .Values.service.containerVolumeMount | default "config-volume" | quote }}
            mountPath: /config
            readOnly: true
          ports:
          - name: http
            containerPort: {{ .Values.service.containerPort }}
            protocol: TCP
          {{- if (.Values.deployment).envFrom }}
          envFrom:
{{ toYaml .Values.deployment.envFrom | indent 12 }}
          {{- end }}
          {{- if (.Values.deployment).resources }}
          resources:
{{- toYaml .Values.deployment.resources | indent 12 }}
          {{- end }}
        
      volumes:
        - name: {{ .Values.service.containerVolumeMount | default "config-volume" | quote }}
          configMap:
            name: {{ .Values.fullName }}-configmap-{{ .Values.service.name }}
