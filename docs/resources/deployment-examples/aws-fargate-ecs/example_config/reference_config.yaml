server:
  servlet:
    context-path: /
    port: 8081
#
# The settings of the anchor reference serer
#
anchor.settings:
  version: 0.0.1
  platformApiEndpoint: https://www.stellaranchordemo.com
# These are secrets shared between Anchor and Platform that are used to safely communicate from `Platform->Anchor`
# and `Anchor->Platform`, specially when they are in different clusters.
#
# When the receiving part decodes the incoming request token, it needs to verify if the token is still valid (and not expired).
integration-auth:
  #
  # authType: used to determine how the authentication will happen between Anchor and Platform. Can be one of the following:
  #     NONE
  #     API_KEY
  #     JWT_TOKEN
  authType: API_KEY
  # CallbackAPI requests (`Platform->Anchor`) will contain an authentication header whose token was built using this
  # secret. The Anchor Backend will also store this same secret and use it to decode the incoming token to verify it
  # came from the Platform.
  platformToAnchorSecret: myPlatformToAnchorSecret
  # PlatformAPI requests (`Anchor->Platform`) will contain an authentication header whose token was built using this
  # secret. The Platform Server will use this secret to decode the incoming token to verify it came from the Anchor.
  anchorToPlatformSecret: myAnchorToPlatformSecret
  # Expiration time, in milliseconds, that will be used to build and validate the JWT tokens
  expirationMilliseconds: 30000

event:
  # The listener type. values: [kafka, sqs, amqp]
  # If the listener is kafka, the kafka listener is configured in kafka.listener section.
  # If the listener is sqs, the sqs listener is configured in the sqs.listener section.
  # If the listener is amqp, the AMQP listner is configured in the ampq.listner section.
  listenerType: sqs
sqs.listener:
  region: ${var.aws_region}
  useSingleQueue: true
  eventTypeToQueue:
    all: dev-platform-queue
    quote_created: sdf_dev_ap_event_quote_created.fifo
    transaction_created: sdf_dev_ap_event_transaction_created.fifo
    transaction_status_changed: sdf_dev_ap_event_transaction_status_changed.fifo
    transaction_error: sdf_dev_ap_event_transaction_error.fifo
  accessKey: ${SQS_ACCESS_KEY}
  secretKey: ${SQS_SECRET_KEY}

#
# Spring Data JDBC settings for H2
#
spring.datasource.url: jdbc:h2:mem:test
spring.jpa.properties.hibernate.dialect: org.hibernate.dialect.H2Dialect
# force gson as serializer/deserializer over jackson
spring.mvc.converters.preferred-json-mapper: gson
#
# Spring Data JDBC settings for SQLite
#
#spring.jpa.database-platform=org.stellar.anchor.reference.sqlite.SQLiteDialect
#spring.jpa.hibernate.ddl-auto=update
#spring.jpa.generate-ddl=true
#spring.datasource.url=jdbc:sqlite:anchor-reference-server.db
#spring.datasource.driver-class-name=org.sqlite.JDBC
#spring.datasource.username=admin
#spring.datasource.password=admin